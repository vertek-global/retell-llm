// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../resource.mjs";
import { isRequestOptions } from "../core.mjs";
export class Agent extends APIResource {
    /**
     * Create a new agent
     *
     * @example
     * ```ts
     * const agentResponse = await client.agent.create({
     *   response_engine: {
     *     llm_id: 'llm_234sdertfsdsfsdf',
     *     type: 'retell-llm',
     *   },
     *   voice_id: '11labs-Adrian',
     * });
     * ```
     */
    create(body, options) {
        return this._client.post('/create-agent', { body, ...options });
    }
    retrieve(agentId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.retrieve(agentId, {}, query);
        }
        return this._client.get(`/get-agent/${agentId}`, { query, ...options });
    }
    /**
     * Update an existing agent
     *
     * @example
     * ```ts
     * const agentResponse = await client.agent.update(
     *   '16b980523634a6dc504898cda492e939',
     *   { agent_name: 'Jarvis' },
     * );
     * ```
     */
    update(agentId, params, options) {
        const { query_version, ...body } = params;
        return this._client.patch(`/update-agent/${agentId}`, {
            query: { version: query_version },
            body,
            ...options,
        });
    }
    /**
     * List all agents
     *
     * @example
     * ```ts
     * const agentResponses = await client.agent.list();
     * ```
     */
    list(options) {
        return this._client.get('/list-agents', options);
    }
    /**
     * Delete an existing agent
     *
     * @example
     * ```ts
     * await client.agent.delete(
     *   'oBeDLoLOeuAbiuaMFXRtDOLriTJ5tSxD',
     * );
     * ```
     */
    delete(agentId, options) {
        return this._client.delete(`/delete-agent/${agentId}`, {
            ...options,
            headers: { Accept: '*/*', ...options?.headers },
        });
    }
    /**
     * Get all versions of an agent
     *
     * @example
     * ```ts
     * const agentResponses = await client.agent.getVersions(
     *   '16b980523634a6dc504898cda492e939',
     * );
     * ```
     */
    getVersions(agentId, options) {
        return this._client.get(`/get-agent-versions/${agentId}`, options);
    }
}
//# sourceMappingURL=agent.mjs.map